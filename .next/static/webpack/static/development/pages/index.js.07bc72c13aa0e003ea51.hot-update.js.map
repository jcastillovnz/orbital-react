{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.07bc72c13aa0e003ea51.hot-update.js","sources":["webpack:///./pages/components/View360.tsx"],"sourcesContent":["import React, {useState, useEffect } from \"react\";\r\n\r\n\r\n// You can play with this to adjust the sensitivity\r\n// higher values make mouse less sensitive\r\nconst pixelsPerDegree = 3;\r\n\r\ninterface props {\r\n  dir: string\r\n  numImages?: number\r\n}\r\n\r\n\r\nconst App =(props: props)=> {\r\nconst {dir, numImages} = props;\r\n\r\nconst [imageIndex, changeImageIndex] = useState(0);\r\nconst [dragging, changeDragging] = useState(false);\r\nconst [dragStartIndex, changeDragStartIndex] = useState(0);\r\nconst [dragStart, changeDragStart] = useState(0);\r\n\r\n/*   const state = {\r\n    dragging: false,\r\n    imageIndex: 0,\r\n    dragStartIndex: 0\r\n  }; */\r\n\r\n  const handleMouseMove = (e) => {\r\n    console.log(\"handle mouse move ->>>>, draggin: \", dragging)\r\n    if (dragging) {\r\n      updateImageIndex(e.screenX);\r\n      alert(\"is dragging\")\r\n      console.log(\"image index\", imageIndex)\r\n    }\r\n  };\r\n  useEffect(() => {\r\nconsole.log(\"se monta\")\r\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\r\n    document.addEventListener(\"mouseup\", handleMouseUp, false);\r\n      // returned function will be called on component unmount \r\n  return () => {\r\n   console.log(\"se desmonta\")\r\n    document.removeEventListener('mousemove',handleMouseMove, false);\r\n    document.removeEventListener(\"mouseup\", handleMouseUp, false);\r\n  }\r\n  }, []); \r\n\r\n\r\n  const ChangeStatusDraggin = ()=>{\r\n\r\n    changeDragging(!dragging) //true\r\n\r\n  }\r\n\r\n\r\n  const handleMouseDown = (e) => {\r\n    e.persist();\r\n    console.log(\"mouse move down\", e)\r\n   // ChangeStatusDraggin()\r\n    changeDragging(true) //true\r\n    changeDragStart(e.screenX)\r\n    changeDragStartIndex(imageIndex)\r\n    //alert( dragging)\r\n/*     this.setState(state => ({\r\n      dragging: true,\r\n      dragStart: e.screenX,\r\n      dragStartIndex: state.imageIndex\r\n    })); */\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    console.log(\"mouse move up\")\r\n    changeDragging(false)  // false\r\n    //ChangeStatusDraggin()\r\n  };\r\n\r\n  const updateImageIndex = (currentPosition) => {\r\n    console.log(\"updateImageIndex\", currentPosition )\r\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages);\r\n    // pixels moved\r\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\r\n    let index = Math.floor(dx) % numImages;\r\n\r\n    if (index < 0) {\r\n      index = numImages + index - 1;\r\n    }\r\n    index = (index + dragStartIndex) % numImages;\r\n    // console.log(index, dragStartIndex, numImages)\r\n    if (index !== imageIndex) {\r\n      //this.setState({ imageIndex: index });\r\n      changeImageIndex(index)\r\n    }\r\n  };\r\n\r\n  const preventDragHandler = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const renderImage = () => {\r\n    \r\n    return (\r\n      <div style={{position:'absolute',   \r\n      width:'auto',\r\n      display:'block',\r\n      margin: '0 auto',\r\n      'text-align': 'left', } as React.CSSProperties} className=\"react360\">\r\n      <img  style={{ \r\n       margin:'auto',\r\n       position:'relative',\r\n       height: '95vh',\r\n       width:'auto',\r\n       display:'flex',\r\n       'justify-content': 'center',\r\n       'align-items': 'center',\r\n       'background-color': 'white',\r\n       '-webkit-user-select': 'none',\r\n       '-khtml-user-select': 'none',\r\n       '-moz-user-select': 'none',\r\n       '-ms-user-select': 'none',\r\n       '-o-user-select':'none',\r\n       'user-select': 'none',\r\n       left:'82%',\r\n       bottom:'150%',\r\n       top:'-25%',\r\n       'transform': 'translate(-50%, 0)',\r\n      '-ms-transform': 'translate(-50%, 0)',\r\n       '-webkit-transform': 'translate(-50%, 0)',\r\n       'z-index': 0\r\n         } as React.CSSProperties}\r\n          className=\"react-360-img\"\r\n          src={`${dir}/${imageIndex}.jpg`}\r\n         /*  src={require(`${dir}/${imageIndex}.jpg`)} */\r\n        />\r\n\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"react-360-img\"\r\n        onMouseDown={handleMouseDown}\r\n        onDragStart={preventDragHandler}\r\n     \r\n      >\r\n      <div style={{position:'fixed'}}>\r\n        Metrics:\r\n<ul>\r\n<li>\r\nNum images: {numImages}\r\n  </li>\r\n<li>\r\n Image index: {imageIndex}\r\n  </li>\r\n  <li>\r\n  Dragging:{dragging? 'Is dragging': 'No draggin'}\r\n  </li>\r\n  <li>\r\n  DragStart:{dragStart}\r\n  </li>\r\n  <li>\r\n  DragStartIndex: {dragStartIndex}\r\n  </li>\r\n</ul>\r\n      </div>  \r\n        {renderImage()}\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAIA;AACA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAQA;;;;;;;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAuBA;AACA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}