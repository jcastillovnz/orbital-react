{"version":3,"file":"static/webpack/static/development/pages/index.js.db0df2d3d3228bcf3633.hot-update.js","sources":["webpack:///./pages/components/View360/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PreloadImages from './Preload'\n\n// You can play with this to adjust the sensitivity\n// higher values make mouse less sensitive\nconst pixelsPerDegree = 2;\ninterface props {\n  dir: string\n  numImages?: number\n}\n\n\nconst App = (props: props) => {\n  const { dir, numImages } = props;\n\n  const [images, setImages] = useState(Array);\n  const [imageIndex, setImageIndex] = useState(0);\n  const [imagesPreloaded, setImagesPreloaded] = useState(false);\n  const [dragging, setDragging] = useState(false);\n  const [dragStartIndex, setDragStartIndex] = useState(0);\n  const [dragStart, setDragStart] = useState(0);\n\n  const handleMouseMove = (e) => {\n    if (dragging === false) {\n      updateImageIndex(e.screenX);\n    }\n  };\n\n  const handleMouseDown = (e) => {\n    e.persist();\n    setDragging(true)\n    setDragStart(e.screenX)\n    setDragStartIndex(imageIndex)\n  };\n\n  const handleMouseUp = () => {\n    setDragging(false)  // false\n  };\n\n  const updateImageIndex = (currentPosition) => {\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages);\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\n    let index = Math.floor(dx) % numImages;\n\n    if (index < 0) {\n      index = numImages + index - 1;\n    }\n    index = (index + dragStartIndex) % numImages;\n    if (index !== imageIndex) {\n      setImageIndex(index)\n    }\n  };\n\n  const preventDragHandler = e => {\n    e.preventDefault();\n  };\n\n  const handlePreloadImages = async () => {\n    for(let i=0; i <= numImages -1; i++){\n      const imageIndex = i\n      const filePath = `${dir}/${imageIndex}.jpg`\n      images.push(filePath)\n  }\n  const imagesLoaded = await  PreloadImages(images).then(() => {\n      setImagesPreloaded(true)\n    });\n    console.log(\"imagesLoaded : \")\n  }\n\n  useEffect(() => {\n    handlePreloadImages();\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\n    document.addEventListener(\"mouseup\", handleMouseUp, false);\n    // returned function will be called on component unmount \n    return () => {\n      console.log(\"se desmonta\")\n      document.removeEventListener('mousemove', handleMouseMove, false);\n      document.removeEventListener(\"mouseup\", handleMouseUp, false);\n    }\n  }, []);\n\n  const renderImage = () => {\n\n    return (\n      <div style={{\n        position: 'absolute',\n        width: 'auto',\n        display: 'block',\n        margin: '0 auto',\n        'text-align': 'left',\n      } as React.CSSProperties} className=\"react360\">\n        <img style={{\n          margin: 'auto',\n          position: 'relative',\n          height: '95vh',\n          width: 'auto',\n          display: 'flex',\n          'justify-content': 'center',\n          'align-items': 'center',\n          'background-color': 'white',\n          '-webkit-user-select': 'none',\n          '-khtml-user-select': 'none',\n          '-moz-user-select': 'none',\n          '-ms-user-select': 'none',\n          '-o-user-select': 'none',\n          'user-select': 'none',\n          left: '82%',\n          bottom: '150%',\n          top: '-25%',\n          'transform': 'translate(-50%, 0)',\n          '-ms-transform': 'translate(-50%, 0)',\n          '-webkit-transform': 'translate(-50%, 0)',\n          'z-index': 0\n        } as React.CSSProperties}\n          className=\"react-360-img\"\n          src={`${dir}/${imageIndex}.jpg`}\n        /*  src={require(`${dir}/${imageIndex}.jpg`)} */\n        />\n\n      </div>\n    );\n  };\n\n\n  return (\n    <div\n      className=\"react-360-img\"\n      onMouseDown={handleMouseDown}\n      onDragStart={preventDragHandler}\n\n    >\n      <div style={{ position: 'fixed' }}>\n        Metrics:\n        <ul>\n          <li>\n            Num images: {numImages}\n          </li>\n          <li>\n            Image index: {imageIndex}\n          </li>\n          <li>\n            Dragging:{dragging ? 'Is dragging' : 'No draggin'}\n          </li>\n          <li>\n            DragStart:{dragStart}\n          </li>\n          <li>\n            imagesPreloaded:{imagesPreloaded}\n          </li>\n          <li>\n            DragStartIndex: {dragStartIndex}\n          </li>\n        </ul>\n      </div>\n      {renderImage()}\n    </div>\n  );\n\n}\n\nexport default App;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAOA;AACA;AACA;AATA;AAMA;AAGA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAuBA;AACA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}