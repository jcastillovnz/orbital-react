{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Castillo\\\\Desktop\\\\template\\\\orbital-react\\\\pages\\\\components\\\\View360.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport \"./React360.css\"; // You can play with this to adjust the sensitivity\n// higher values make mouse less sensitive\n\nconst pixelsPerDegree = 3;\n\nclass React360 extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dragging: false,\n      imageIndex: 0,\n      dragStartIndex: 0\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      document.addEventListener(\"mousemove\", this.handleMouseMove, false);\n      document.addEventListener(\"mouseup\", this.handleMouseUp, false);\n    });\n\n    _defineProperty(this, \"componentWillUnmount\", () => {\n      document.removeEventListener(\"mousemove\", this.handleMouseMove, false);\n      document.removeEventListener(\"mouseup\", this.handleMouseUp, false);\n    });\n\n    _defineProperty(this, \"handleMouseDown\", e => {\n      e.persist();\n      this.setState(state => ({\n        dragging: true,\n        dragStart: e.screenX,\n        dragStartIndex: state.imageIndex\n      }));\n    });\n\n    _defineProperty(this, \"handleMouseUp\", () => {\n      this.setState({\n        dragging: false\n      });\n    });\n\n    _defineProperty(this, \"updateImageIndex\", currentPosition => {\n      let numImages = this.props.numImages;\n      const pixelsPerImage = pixelsPerDegree * (360 / numImages);\n      const {\n        dragStart,\n        imageIndex,\n        dragStartIndex\n      } = this.state; // pixels moved\n\n      let dx = (currentPosition - dragStart) / pixelsPerImage;\n      let index = Math.floor(dx) % numImages;\n\n      if (index < 0) {\n        index = numImages + index - 1;\n      }\n\n      index = (index + dragStartIndex) % numImages; // console.log(index, dragStartIndex, numImages)\n\n      if (index !== imageIndex) {\n        this.setState({\n          imageIndex: index\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleMouseMove\", e => {\n      if (this.state.dragging) {\n        this.updateImageIndex(e.screenX);\n      }\n    });\n\n    _defineProperty(this, \"preventDragHandler\", e => {\n      e.preventDefault();\n    });\n\n    _defineProperty(this, \"renderImage\", () => {\n      const {\n        imageIndex\n      } = this.state;\n      return __jsx(\"div\", {\n        className: \"react360\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, __jsx(\"img\", {\n        className: \"react-360-img\",\n        alt: \"\",\n        src: require(`./${this.props.dir}/${imageIndex}.jpg`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }));\n    });\n\n    _defineProperty(this, \"render\", () => {\n      return __jsx(\"div\", {\n        className: \"react-360-img\",\n        onMouseDown: this.handleMouseDown,\n        onDragStart: this.preventDragHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, this.renderImage());\n    });\n  }\n\n}\n\n_defineProperty(React360, \"defaultProps\", {\n  dir: \"awair-360\",\n  numImages: 55\n});\n\nexport default React360;","map":{"version":3,"sources":["C:/Users/Jose Castillo/Desktop/template/orbital-react/pages/components/View360.tsx"],"names":["React","Component","pixelsPerDegree","React360","dragging","imageIndex","dragStartIndex","document","addEventListener","handleMouseMove","handleMouseUp","removeEventListener","e","persist","setState","state","dragStart","screenX","currentPosition","numImages","props","pixelsPerImage","dx","index","Math","floor","updateImageIndex","preventDefault","require","dir","handleMouseDown","preventDragHandler","renderImage"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP,C,CAEA;AACA;;AACA,MAAMC,eAAe,GAAG,CAAxB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,mCAGvB;AACNG,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,UAAU,EAAE,CAFN;AAGNC,MAAAA,cAAc,EAAE;AAHV,KAHuB;;AAAA,+CASX,MAAM;AACxBC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKC,eAA5C,EAA6D,KAA7D;AACAF,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKE,aAA1C,EAAyD,KAAzD;AACD,KAZ8B;;AAAA,kDAcR,MAAM;AAC3BH,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,WAA7B,EAA0C,KAAKF,eAA/C,EAAgE,KAAhE;AACAF,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,SAA7B,EAAwC,KAAKD,aAA7C,EAA4D,KAA5D;AACD,KAjB8B;;AAAA,6CAmBbE,CAAC,IAAI;AACrBA,MAAAA,CAAC,CAACC,OAAF;AACA,WAAKC,QAAL,CAAcC,KAAK,KAAK;AACtBX,QAAAA,QAAQ,EAAE,IADY;AAEtBY,QAAAA,SAAS,EAAEJ,CAAC,CAACK,OAFS;AAGtBX,QAAAA,cAAc,EAAES,KAAK,CAACV;AAHA,OAAL,CAAnB;AAKD,KA1B8B;;AAAA,2CA4Bf,MAAM;AACpB,WAAKS,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KA9B8B;;AAAA,8CAgCZc,eAAe,IAAI;AACpC,UAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,YAAME,cAAc,GAAGnB,eAAe,IAAI,MAAMiB,SAAV,CAAtC;AACA,YAAM;AAAEH,QAAAA,SAAF;AAAaX,QAAAA,UAAb;AAAyBC,QAAAA;AAAzB,UAA4C,KAAKS,KAAvD,CAHoC,CAIpC;;AACA,UAAIO,EAAE,GAAG,CAACJ,eAAe,GAAGF,SAAnB,IAAgCK,cAAzC;AACA,UAAIE,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,EAAX,IAAiBH,SAA7B;;AAEA,UAAII,KAAK,GAAG,CAAZ,EAAe;AACbA,QAAAA,KAAK,GAAGJ,SAAS,GAAGI,KAAZ,GAAoB,CAA5B;AACD;;AACDA,MAAAA,KAAK,GAAG,CAACA,KAAK,GAAGjB,cAAT,IAA2Ba,SAAnC,CAXoC,CAYpC;;AACA,UAAII,KAAK,KAAKlB,UAAd,EAA0B;AACxB,aAAKS,QAAL,CAAc;AAAET,UAAAA,UAAU,EAAEkB;AAAd,SAAd;AACD;AACF,KAhD8B;;AAAA,6CAkDbX,CAAC,IAAI;AACrB,UAAI,KAAKG,KAAL,CAAWX,QAAf,EAAyB;AACvB,aAAKsB,gBAAL,CAAsBd,CAAC,CAACK,OAAxB;AACD;AACF,KAtD8B;;AAAA,gDAwDVL,CAAC,IAAI;AACxBA,MAAAA,CAAC,CAACe,cAAF;AACD,KA1D8B;;AAAA,yCA4DjB,MAAM;AAClB,YAAM;AAAEtB,QAAAA;AAAF,UAAiB,KAAKU,KAA5B;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,GAAG,EAAC,EAFN;AAGE,QAAA,GAAG,EAAEa,OAAO,CAAE,KAAI,KAAKR,KAAL,CAAWS,GAAI,IAAGxB,UAAW,MAAnC,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD,KAxE8B;;AAAA,oCA0EtB,MAAM;AACb,aACE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,WAAW,EAAE,KAAKyB,eAFpB;AAGE,QAAA,WAAW,EAAE,KAAKC,kBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,KAAKC,WAAL,EALH,CADF;AASD,KApF8B;AAAA;;AAAA;;gBAA3B7B,Q,kBACkB;AAAE0B,EAAAA,GAAG,EAAE,WAAP;AAAoBV,EAAAA,SAAS,EAAE;AAA/B,C;;AAsFxB,eAAehB,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./React360.css\";\r\n\r\n// You can play with this to adjust the sensitivity\r\n// higher values make mouse less sensitive\r\nconst pixelsPerDegree = 3;\r\n\r\nclass React360 extends Component {\r\n  static defaultProps = { dir: \"awair-360\", numImages: 55 };\r\n\r\n  state = {\r\n    dragging: false,\r\n    imageIndex: 0,\r\n    dragStartIndex: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    document.addEventListener(\"mousemove\", this.handleMouseMove, false);\r\n    document.addEventListener(\"mouseup\", this.handleMouseUp, false);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    document.removeEventListener(\"mousemove\", this.handleMouseMove, false);\r\n    document.removeEventListener(\"mouseup\", this.handleMouseUp, false);\r\n  };\r\n\r\n  handleMouseDown = e => {\r\n    e.persist();\r\n    this.setState(state => ({\r\n      dragging: true,\r\n      dragStart: e.screenX,\r\n      dragStartIndex: state.imageIndex\r\n    }));\r\n  };\r\n\r\n  handleMouseUp = () => {\r\n    this.setState({ dragging: false });\r\n  };\r\n\r\n  updateImageIndex = currentPosition => {\r\n    let numImages = this.props.numImages;\r\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages);\r\n    const { dragStart, imageIndex, dragStartIndex } = this.state;\r\n    // pixels moved\r\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\r\n    let index = Math.floor(dx) % numImages;\r\n\r\n    if (index < 0) {\r\n      index = numImages + index - 1;\r\n    }\r\n    index = (index + dragStartIndex) % numImages;\r\n    // console.log(index, dragStartIndex, numImages)\r\n    if (index !== imageIndex) {\r\n      this.setState({ imageIndex: index });\r\n    }\r\n  };\r\n\r\n  handleMouseMove = e => {\r\n    if (this.state.dragging) {\r\n      this.updateImageIndex(e.screenX);\r\n    }\r\n  };\r\n\r\n  preventDragHandler = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  renderImage = () => {\r\n    const { imageIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"react360\">\r\n        <img\r\n          className=\"react-360-img\"\r\n          alt=\"\"\r\n          src={require(`./${this.props.dir}/${imageIndex}.jpg`)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div\r\n        className=\"react-360-img\"\r\n        onMouseDown={this.handleMouseDown}\r\n        onDragStart={this.preventDragHandler}\r\n      >\r\n        {this.renderImage()}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default React360;"]},"metadata":{},"sourceType":"module"}