{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Jose Castillo\\\\Desktop\\\\template\\\\orbital-react\\\\pages\\\\components\\\\View360.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\"; //import \"./React360.css\";\n// You can play with this to adjust the sensitivity\n// higher values make mouse less sensitive\n\nvar pixelsPerDegree = 3;\n\nvar App = function App() {\n  var defaultProps = {\n    dir: \"awair-360\",\n    numImages: 55\n  };\n  state = {\n    dragging: false,\n    imageIndex: 0,\n    dragStartIndex: 0\n  };\n\n  componentDidMount = function componentDidMount() {\n    document.addEventListener(\"mousemove\", _this.handleMouseMove, false);\n    document.addEventListener(\"mouseup\", _this.handleMouseUp, false);\n  };\n\n  componentWillUnmount = function componentWillUnmount() {\n    document.removeEventListener(\"mousemove\", _this.handleMouseMove, false);\n    document.removeEventListener(\"mouseup\", _this.handleMouseUp, false);\n  };\n\n  var handleMouseDown = function handleMouseDown(e) {\n    e.persist();\n\n    _this.setState(function (state) {\n      return {\n        dragging: true,\n        dragStart: e.screenX,\n        dragStartIndex: state.imageIndex\n      };\n    });\n  };\n\n  var handleMouseUp = function handleMouseUp() {\n    _this.setState({\n      dragging: false\n    });\n  };\n\n  var updateImageIndex = function updateImageIndex(currentPosition) {\n    var numImages = _this.props.numImages;\n    var pixelsPerImage = pixelsPerDegree * (360 / numImages);\n    var _this$state = _this.state,\n        dragStart = _this$state.dragStart,\n        imageIndex = _this$state.imageIndex,\n        dragStartIndex = _this$state.dragStartIndex; // pixels moved\n\n    var dx = (currentPosition - dragStart) / pixelsPerImage;\n    var index = Math.floor(dx) % numImages;\n\n    if (index < 0) {\n      index = numImages + index - 1;\n    }\n\n    index = (index + dragStartIndex) % numImages; // console.log(index, dragStartIndex, numImages)\n\n    if (index !== imageIndex) {\n      _this.setState({\n        imageIndex: index\n      });\n    }\n  };\n\n  var handleMouseMove = function handleMouseMove(e) {\n    if (_this.state.dragging) {\n      _this.updateImageIndex(e.screenX);\n    }\n  };\n\n  var preventDragHandler = function preventDragHandler(e) {\n    e.preventDefault();\n  };\n\n  var renderImage = function renderImage() {\n    var imageIndex = _this.state.imageIndex;\n    return __jsx(\"div\", {\n      className: \"react360\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      className: \"react-360-img\",\n      alt: \"\",\n      src: require(\"./\".concat(_this.props.dir, \"/\").concat(imageIndex, \".jpg\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  render = function render() {\n    return __jsx(\"div\", {\n      className: \"react-360-img\",\n      onMouseDown: _this.handleMouseDown,\n      onDragStart: _this.preventDragHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, _this.renderImage());\n  };\n};\n\nexport default React360;","map":{"version":3,"sources":["C:/Users/Jose Castillo/Desktop/template/orbital-react/pages/components/View360.tsx"],"names":["React","pixelsPerDegree","App","defaultProps","dir","numImages","state","dragging","imageIndex","dragStartIndex","componentDidMount","document","addEventListener","handleMouseMove","handleMouseUp","componentWillUnmount","removeEventListener","handleMouseDown","e","persist","setState","dragStart","screenX","updateImageIndex","currentPosition","props","pixelsPerImage","dx","index","Math","floor","preventDragHandler","preventDefault","renderImage","require","render","React360"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n//import \"./React360.css\";\r\n\r\n// You can play with this to adjust the sensitivity\r\n// higher values make mouse less sensitive\r\nconst pixelsPerDegree = 3;\r\n\r\nconst App =()=> {\r\nconst  defaultProps = { dir: \"awair-360\", numImages: 55 };\r\n\r\n  state = {\r\n    dragging: false,\r\n    imageIndex: 0,\r\n    dragStartIndex: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    document.addEventListener(\"mousemove\", this.handleMouseMove, false);\r\n    document.addEventListener(\"mouseup\", this.handleMouseUp, false);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    document.removeEventListener(\"mousemove\", this.handleMouseMove, false);\r\n    document.removeEventListener(\"mouseup\", this.handleMouseUp, false);\r\n  };\r\n\r\n  const handleMouseDown = e => {\r\n    e.persist();\r\n    this.setState(state => ({\r\n      dragging: true,\r\n      dragStart: e.screenX,\r\n      dragStartIndex: state.imageIndex\r\n    }));\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    this.setState({ dragging: false });\r\n  };\r\n\r\n  const updateImageIndex = currentPosition => {\r\n    let numImages = this.props.numImages;\r\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages);\r\n    const { dragStart, imageIndex, dragStartIndex } = this.state;\r\n    // pixels moved\r\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\r\n    let index = Math.floor(dx) % numImages;\r\n\r\n    if (index < 0) {\r\n      index = numImages + index - 1;\r\n    }\r\n    index = (index + dragStartIndex) % numImages;\r\n    // console.log(index, dragStartIndex, numImages)\r\n    if (index !== imageIndex) {\r\n      this.setState({ imageIndex: index });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = e => {\r\n    if (this.state.dragging) {\r\n      this.updateImageIndex(e.screenX);\r\n    }\r\n  };\r\n\r\n  const preventDragHandler = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const renderImage = () => {\r\n    const { imageIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"react360\">\r\n        <img\r\n          className=\"react-360-img\"\r\n          alt=\"\"\r\n          src={require(`./${this.props.dir}/${imageIndex}.jpg`)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div\r\n        className=\"react-360-img\"\r\n        onMouseDown={this.handleMouseDown}\r\n        onDragStart={this.preventDragHandler}\r\n      >\r\n        {this.renderImage()}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default React360;"]},"metadata":{},"sourceType":"module"}