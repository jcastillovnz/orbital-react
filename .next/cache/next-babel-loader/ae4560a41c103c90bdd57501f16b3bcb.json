{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Castillo\\\\Desktop\\\\template\\\\orbital-react\\\\pages\\\\components\\\\View360.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\"; // You can play with this to adjust the sensitivity\n// higher values make mouse less sensitive\n\nconst pixelsPerDegree = 20;\n\nconst App = props => {\n  const {\n    dir,\n    numImages\n  } = props;\n  const {\n    0: imageIndex,\n    1: changeImageIndex\n  } = useState(0);\n  const {\n    0: dragging,\n    1: changeDragging\n  } = useState(false);\n  const {\n    0: dragStartIndex,\n    1: changeDragStartIndex\n  } = useState(0);\n  const {\n    0: dragStart,\n    1: changeDragStart\n  } = useState(0);\n  /*   const state = {\r\n      dragging: false,\r\n      imageIndex: 0,\r\n      dragStartIndex: 0\r\n    }; */\n\n  const handleMouseMove = e => {\n    console.log(\"state on draggin \", dragging);\n    console.log(\"handle mouse move ->>>>, draggin: \", dragging);\n\n    if (dragging === false) {\n      //  alert(\"IS TRUE DRAGGIN IN MOVE\")\n      updateImageIndex(e.screenX); /// alert(\"is dragging\")\n\n      console.log(\"image index\", imageIndex);\n    }\n  };\n\n  const handleMouseDown = e => {\n    e.persist(); // ChangeStatusDraggin()\n\n    changeDragging(true); //true\n\n    changeDragStart(e.screenX);\n    changeDragStartIndex(imageIndex);\n    console.log(\"draggin set in true --->\", dragging); //alert( dragging)\n\n    /*     this.setState(state => ({\r\n          dragging: true,\r\n          dragStart: e.screenX,\r\n          dragStartIndex: state.imageIndex\r\n        })); */\n  };\n\n  const handleMouseUp = () => {\n    changeDragging(false); // false\n\n    console.log(\"draggin set in false --->\", dragging);\n  };\n\n  const updateImageIndex = currentPosition => {\n    console.log(\"updateImageIndex\", currentPosition);\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages); // pixels moved\n\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\n    let index = Math.floor(dx) % numImages;\n\n    if (index < 0) {\n      index = numImages + index - 1;\n    }\n\n    index = (index + dragStartIndex) % numImages; // console.log(index, dragStartIndex, numImages)\n\n    if (index !== imageIndex) {\n      //this.setState({ imageIndex: index });\n      changeImageIndex(index);\n    }\n  };\n\n  const preventDragHandler = e => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    console.log(\"se monta\");\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\n    document.addEventListener(\"mouseup\", handleMouseUp, false); // returned function will be called on component unmount \n\n    return () => {\n      console.log(\"se desmonta\");\n      document.removeEventListener('mousemove', handleMouseMove, false);\n      document.removeEventListener(\"mouseup\", handleMouseUp, false);\n    };\n  }, []);\n\n  const renderImage = () => {\n    return __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'auto',\n        display: 'block',\n        margin: '0 auto',\n        'text-align': 'left'\n      },\n      className: \"react360\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      style: {\n        margin: 'auto',\n        position: 'relative',\n        height: '95vh',\n        width: 'auto',\n        display: 'flex',\n        'justify-content': 'center',\n        'align-items': 'center',\n        'background-color': 'white',\n        '-webkit-user-select': 'none',\n        '-khtml-user-select': 'none',\n        '-moz-user-select': 'none',\n        '-ms-user-select': 'none',\n        '-o-user-select': 'none',\n        'user-select': 'none',\n        left: '82%',\n        bottom: '150%',\n        top: '-25%',\n        'transform': 'translate(-50%, 0)',\n        '-ms-transform': 'translate(-50%, 0)',\n        '-webkit-transform': 'translate(-50%, 0)',\n        'z-index': 0\n      },\n      className: \"react-360-img\",\n      src: `${dir}/${imageIndex}.jpg`\n      /*  src={require(`${dir}/${imageIndex}.jpg`)} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"react-360-img\",\n    onMouseDown: handleMouseDown,\n    onDragStart: preventDragHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      position: 'fixed'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, \"Metrics:\", __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 1\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 1\n    }\n  }, \"Num images: \", numImages), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 1\n    }\n  }, \"Image index: \", imageIndex), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 3\n    }\n  }, \"Dragging:\", dragging ? 'Is dragging' : 'No draggin'), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 3\n    }\n  }, \"DragStart:\", dragStart), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 3\n    }\n  }, \"DragStartIndex: \", dragStartIndex))), renderImage());\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Jose Castillo/Desktop/template/orbital-react/pages/components/View360.tsx"],"names":["React","useState","useEffect","pixelsPerDegree","App","props","dir","numImages","imageIndex","changeImageIndex","dragging","changeDragging","dragStartIndex","changeDragStartIndex","dragStart","changeDragStart","handleMouseMove","e","console","log","updateImageIndex","screenX","handleMouseDown","persist","handleMouseUp","currentPosition","pixelsPerImage","dx","index","Math","floor","preventDragHandler","preventDefault","document","addEventListener","removeEventListener","renderImage","position","width","display","margin","height","left","bottom","top"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from \"react\";\r\n\r\n\r\n// You can play with this to adjust the sensitivity\r\n// higher values make mouse less sensitive\r\nconst pixelsPerDegree = 20;\r\n\r\ninterface props {\r\n  dir: string\r\n  numImages?: number\r\n}\r\n\r\n\r\nconst App =(props: props)=> {\r\nconst {dir, numImages} = props;\r\n\r\nconst [imageIndex, changeImageIndex] = useState(0);\r\nconst [dragging, changeDragging] = useState(false);\r\nconst [dragStartIndex, changeDragStartIndex] = useState(0);\r\nconst [dragStart, changeDragStart] = useState(0);\r\n\r\n/*   const state = {\r\n    dragging: false,\r\n    imageIndex: 0,\r\n    dragStartIndex: 0\r\n  }; */\r\n\r\n  const handleMouseMove = (e) => {\r\n    console.log(\"state on draggin \", dragging)\r\n    console.log(\"handle mouse move ->>>>, draggin: \", dragging)\r\n    if (dragging===false) {\r\n    //  alert(\"IS TRUE DRAGGIN IN MOVE\")\r\n      updateImageIndex(e.screenX);\r\n     /// alert(\"is dragging\")\r\n      console.log(\"image index\", imageIndex)\r\n    }\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    e.persist();\r\n   // ChangeStatusDraggin()\r\n    changeDragging(true) //true\r\n    changeDragStart(e.screenX)\r\n    changeDragStartIndex(imageIndex)\r\n    console.log(\"draggin set in true --->\", dragging)\r\n    //alert( dragging)\r\n/*     this.setState(state => ({\r\n      dragging: true,\r\n      dragStart: e.screenX,\r\n      dragStartIndex: state.imageIndex\r\n    })); */\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    changeDragging(false)  // false\r\n    console.log(\"draggin set in false --->\", dragging)\r\n  };\r\n\r\n  const updateImageIndex = (currentPosition) => {\r\n    console.log(\"updateImageIndex\", currentPosition )\r\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages);\r\n    // pixels moved\r\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\r\n    let index = Math.floor(dx) % numImages;\r\n\r\n    if (index < 0) {\r\n      index = numImages + index - 1;\r\n    }\r\n    index = (index + dragStartIndex) % numImages;\r\n    // console.log(index, dragStartIndex, numImages)\r\n    if (index !== imageIndex) {\r\n      //this.setState({ imageIndex: index });\r\n      changeImageIndex(index)\r\n    }\r\n  };\r\n\r\n  const preventDragHandler = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\nconsole.log(\"se monta\")\r\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\r\n    document.addEventListener(\"mouseup\", handleMouseUp, false);\r\n      // returned function will be called on component unmount \r\n  return () => {\r\n   console.log(\"se desmonta\")\r\n    document.removeEventListener('mousemove',handleMouseMove, false);\r\n    document.removeEventListener(\"mouseup\", handleMouseUp, false);\r\n  }\r\n  }, []); \r\n\r\n\r\n  \r\n\r\n  const renderImage = () => {\r\n    \r\n    return (\r\n      <div style={{position:'absolute',   \r\n      width:'auto',\r\n      display:'block',\r\n      margin: '0 auto',\r\n      'text-align': 'left', } as React.CSSProperties} className=\"react360\">\r\n      <img  style={{ \r\n       margin:'auto',\r\n       position:'relative',\r\n       height: '95vh',\r\n       width:'auto',\r\n       display:'flex',\r\n       'justify-content': 'center',\r\n       'align-items': 'center',\r\n       'background-color': 'white',\r\n       '-webkit-user-select': 'none',\r\n       '-khtml-user-select': 'none',\r\n       '-moz-user-select': 'none',\r\n       '-ms-user-select': 'none',\r\n       '-o-user-select':'none',\r\n       'user-select': 'none',\r\n       left:'82%',\r\n       bottom:'150%',\r\n       top:'-25%',\r\n       'transform': 'translate(-50%, 0)',\r\n      '-ms-transform': 'translate(-50%, 0)',\r\n       '-webkit-transform': 'translate(-50%, 0)',\r\n       'z-index': 0\r\n         } as React.CSSProperties}\r\n          className=\"react-360-img\"\r\n          src={`${dir}/${imageIndex}.jpg`}\r\n         /*  src={require(`${dir}/${imageIndex}.jpg`)} */\r\n        />\r\n\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"react-360-img\"\r\n        onMouseDown={handleMouseDown}\r\n        onDragStart={preventDragHandler}\r\n     \r\n      >\r\n      <div style={{position:'fixed'}}>\r\n        Metrics:\r\n<ul>\r\n<li>\r\nNum images: {numImages}\r\n  </li>\r\n<li>\r\n Image index: {imageIndex}\r\n  </li>\r\n  <li>\r\n  Dragging:{dragging? 'Is dragging': 'No draggin'}\r\n  </li>\r\n  <li>\r\n  DragStart:{dragStart}\r\n  </li>\r\n  <li>\r\n  DragStartIndex: {dragStartIndex}\r\n  </li>\r\n</ul>\r\n      </div>  \r\n        {renderImage()}\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}