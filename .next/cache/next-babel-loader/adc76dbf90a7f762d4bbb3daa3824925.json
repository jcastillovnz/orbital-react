{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\"; // You can play with this to adjust the sensitivity\n// higher values make mouse less sensitive\n\nconst pixelsPerDegree = 2;\n\nconst App = props => {\n  const {\n    dir,\n    numImages\n  } = props;\n  const {\n    0: imageIndex,\n    1: changeImageIndex\n  } = useState(0);\n  const {\n    0: dragging,\n    1: changeDragging\n  } = useState(false);\n  const {\n    0: dragStartIndex,\n    1: changeDragStartIndex\n  } = useState(0);\n  const {\n    0: dragStart,\n    1: changeDragStart\n  } = useState(0);\n  /*   const state = {\r\n      dragging: false,\r\n      imageIndex: 0,\r\n      dragStartIndex: 0\r\n    }; */\n\n  const handleMouseMove = e => {\n    console.log(\"state on draggin \", dragging);\n    console.log(\"handle mouse move ->>>>, draggin: \", dragging);\n\n    if (dragging === false) {\n      //  alert(\"IS TRUE DRAGGIN IN MOVE\")\n      updateImageIndex(e.screenX); /// alert(\"is dragging\")\n\n      console.log(\"image index\", imageIndex);\n    }\n  };\n\n  const handleMouseDown = e => {\n    e.persist(); // ChangeStatusDraggin()\n\n    changeDragging(true); //true\n\n    changeDragStart(e.screenX);\n    changeDragStartIndex(imageIndex);\n    console.log(\"draggin set in true --->\", dragging); //alert( dragging)\n\n    /*     this.setState(state => ({\r\n          dragging: true,\r\n          dragStart: e.screenX,\r\n          dragStartIndex: state.imageIndex\r\n        })); */\n  };\n\n  const handleMouseUp = () => {\n    changeDragging(false); // false\n\n    console.log(\"draggin set in false --->\", dragging);\n  };\n\n  const updateImageIndex = currentPosition => {\n    console.log(\"updateImageIndex\", currentPosition);\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages); // pixels moved\n\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\n    let index = Math.floor(dx) % numImages;\n\n    if (index < 0) {\n      index = numImages + index - 1;\n    }\n\n    index = (index + dragStartIndex) % numImages; // console.log(index, dragStartIndex, numImages)\n\n    if (index !== imageIndex) {\n      //this.setState({ imageIndex: index });\n      changeImageIndex(index);\n    }\n  };\n\n  const preventDragHandler = e => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    console.log(\"se monta\");\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\n    document.addEventListener(\"mouseup\", handleMouseUp, false); // returned function will be called on component unmount \n\n    return () => {\n      console.log(\"se desmonta\");\n      document.removeEventListener('mousemove', handleMouseMove, false);\n      document.removeEventListener(\"mouseup\", handleMouseUp, false);\n    };\n  }, []);\n\n  const renderImage = () => {\n    return __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'auto',\n        display: 'block',\n        margin: '0 auto',\n        'text-align': 'left'\n      },\n      className: \"react360\"\n    }, __jsx(\"img\", {\n      style: {\n        margin: 'auto',\n        position: 'relative',\n        height: '95vh',\n        width: 'auto',\n        display: 'flex',\n        'justify-content': 'center',\n        'align-items': 'center',\n        'background-color': 'white',\n        '-webkit-user-select': 'none',\n        '-khtml-user-select': 'none',\n        '-moz-user-select': 'none',\n        '-ms-user-select': 'none',\n        '-o-user-select': 'none',\n        'user-select': 'none',\n        left: '82%',\n        bottom: '150%',\n        top: '-25%',\n        'transform': 'translate(-50%, 0)',\n        '-ms-transform': 'translate(-50%, 0)',\n        '-webkit-transform': 'translate(-50%, 0)',\n        'z-index': 0\n      },\n      className: \"react-360-img\",\n      src: `${dir}/${imageIndex}.jpg`\n      /*  src={require(`${dir}/${imageIndex}.jpg`)} */\n\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"react-360-img\",\n    onMouseDown: handleMouseDown,\n    onDragStart: preventDragHandler\n  }, __jsx(\"div\", {\n    style: {\n      position: 'fixed'\n    }\n  }, \"Metrics:\", __jsx(\"ul\", null, __jsx(\"li\", null, \"Num images: \", numImages), __jsx(\"li\", null, \"Image index: \", imageIndex), __jsx(\"li\", null, \"Dragging:\", dragging ? 'Is dragging' : 'No draggin'), __jsx(\"li\", null, \"DragStart:\", dragStart), __jsx(\"li\", null, \"DragStartIndex: \", dragStartIndex))), renderImage());\n};\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}