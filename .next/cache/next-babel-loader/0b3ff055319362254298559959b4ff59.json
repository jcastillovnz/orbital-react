{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Jose Castillo\\\\Desktop\\\\template\\\\orbital-react\\\\pages\\\\components\\\\View360.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\"; //import \"./React360.css\";\n// You can play with this to adjust the sensitivity\n// higher values make mouse less sensitive\n\nvar pixelsPerDegree = 3;\n\nvar App = function App(props) {\n  var defaultProps = {\n    dir: \"awair-360\",\n    numImages: 55\n  };\n\n  var handleMouseDown = function handleMouseDown(e) {\n    e.persist();\n\n    _this.setState(function (state) {\n      return {\n        dragging: true,\n        dragStart: e.screenX,\n        dragStartIndex: state.imageIndex\n      };\n    });\n  };\n\n  var state = {\n    dragging: false,\n    imageIndex: 0,\n    dragStartIndex: 0\n  };\n  useEffect(function () {\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\n    document.addEventListener(\"mouseup\", handleMouseUp, false);\n    return function () {\n      document.removeEventListener(\"mousemove\", handleMouseMove, false);\n      document.removeEventListener(\"mouseup\", handleMouseUp, false);\n    };\n  }, []);\n  /*   componentDidMount = () => {\r\n      document.addEventListener(\"mousemove\", handleMouseMove, false);\r\n      document.addEventListener(\"mouseup\", handleMouseUp, false);\r\n    }; */\n\n  /*   componentWillUnmount = () => {\r\n      document.removeEventListener(\"mousemove\", handleMouseMove, false);\r\n      document.removeEventListener(\"mouseup\", handleMouseUp, false);\r\n    };\r\n   */\n\n  var handleMouseUp = function handleMouseUp() {\n    _this.setState({\n      dragging: false\n    });\n  };\n\n  var updateImageIndex = function updateImageIndex(currentPosition) {\n    var numImages = _this.props.numImages;\n    var pixelsPerImage = pixelsPerDegree * (360 / numImages);\n    var _this$state = _this.state,\n        dragStart = _this$state.dragStart,\n        imageIndex = _this$state.imageIndex,\n        dragStartIndex = _this$state.dragStartIndex; // pixels moved\n\n    var dx = (currentPosition - dragStart) / pixelsPerImage;\n    var index = Math.floor(dx) % numImages;\n\n    if (index < 0) {\n      index = numImages + index - 1;\n    }\n\n    index = (index + dragStartIndex) % numImages; // console.log(index, dragStartIndex, numImages)\n\n    if (index !== imageIndex) {\n      _this.setState({\n        imageIndex: index\n      });\n    }\n  };\n\n  var handleMouseMove = function handleMouseMove(e) {\n    if (_this.state.dragging) {\n      updateImageIndex(e.screenX);\n    }\n  };\n\n  var preventDragHandler = function preventDragHandler(e) {\n    e.preventDefault();\n  };\n\n  var renderImage = function renderImage() {\n    var imageIndex = _this.state.imageIndex;\n    return __jsx(\"div\", {\n      className: \"react360\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      className: \"react-360-img\",\n      alt: \"\",\n      src: require(\"./\".concat(props.dir, \"/\").concat(imageIndex, \".jpg\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"react-360-img\",\n    onMouseDown: _this.handleMouseDown,\n    onDragStart: _this.preventDragHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, _this.renderImage());\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Jose Castillo/Desktop/template/orbital-react/pages/components/View360.tsx"],"names":["React","useEffect","pixelsPerDegree","App","props","defaultProps","dir","numImages","handleMouseDown","e","persist","setState","state","dragging","dragStart","screenX","dragStartIndex","imageIndex","document","addEventListener","handleMouseMove","handleMouseUp","removeEventListener","updateImageIndex","currentPosition","pixelsPerImage","dx","index","Math","floor","preventDragHandler","preventDefault","renderImage","require"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from \"react\";\r\n//import \"./React360.css\";\r\n\r\n// You can play with this to adjust the sensitivity\r\n// higher values make mouse less sensitive\r\nconst pixelsPerDegree = 3;\r\n\r\nconst App =(props)=> {\r\nconst  defaultProps = { dir: \"awair-360\", numImages: 55 };\r\nconst handleMouseDown = (e) => {\r\n  e.persist();\r\n  this.setState(state => ({\r\n    dragging: true,\r\n    dragStart: e.screenX,\r\n    dragStartIndex: state.imageIndex\r\n  }));\r\n};\r\n  const state = {\r\n    dragging: false,\r\n    imageIndex: 0,\r\n    dragStartIndex: 0\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\r\n    document.addEventListener(\"mouseup\", handleMouseUp, false);\r\n\r\n    return () => {\r\n    document.removeEventListener(\"mousemove\", handleMouseMove, false);\r\n    document.removeEventListener(\"mouseup\", handleMouseUp, false);\r\n    }\r\n\r\n\r\n  }, []); \r\n\r\n/*   componentDidMount = () => {\r\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\r\n    document.addEventListener(\"mouseup\", handleMouseUp, false);\r\n  }; */\r\n\r\n/*   componentWillUnmount = () => {\r\n    document.removeEventListener(\"mousemove\", handleMouseMove, false);\r\n    document.removeEventListener(\"mouseup\", handleMouseUp, false);\r\n  };\r\n */\r\n\r\n\r\n  const handleMouseUp = () => {\r\n    this.setState({ dragging: false });\r\n  };\r\n\r\n  const updateImageIndex = (currentPosition) => {\r\n    let numImages = this.props.numImages;\r\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages);\r\n    const { dragStart, imageIndex, dragStartIndex } = this.state;\r\n    // pixels moved\r\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\r\n    let index = Math.floor(dx) % numImages;\r\n\r\n    if (index < 0) {\r\n      index = numImages + index - 1;\r\n    }\r\n    index = (index + dragStartIndex) % numImages;\r\n    // console.log(index, dragStartIndex, numImages)\r\n    if (index !== imageIndex) {\r\n      this.setState({ imageIndex: index });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (this.state.dragging) {\r\n      updateImageIndex(e.screenX);\r\n    }\r\n  };\r\n\r\n  const preventDragHandler = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const renderImage = () => {\r\n    const { imageIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"react360\">\r\n        <img\r\n          className=\"react-360-img\"\r\n          alt=\"\"\r\n          src={require(`./${props.dir}/${imageIndex}.jpg`)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"react-360-img\"\r\n        onMouseDown={this.handleMouseDown}\r\n        onDragStart={this.preventDragHandler}\r\n      >\r\n        {this.renderImage()}\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}