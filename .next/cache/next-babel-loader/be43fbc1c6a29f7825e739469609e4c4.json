{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Castillo\\\\Desktop\\\\template\\\\orbital-react\\\\pages\\\\components\\\\View360.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\"; //import \"./React360.css\";\n// You can play with this to adjust the sensitivity\n// higher values make mouse less sensitive\n\nconst pixelsPerDegree = 3;\n\nconst App = props => {\n  const {\n    dir,\n    numImages\n  } = props;\n  const {\n    0: imageIndex,\n    1: changeImageIndex\n  } = useState(0);\n  const {\n    0: dragging,\n    1: changeDragging\n  } = useState(false);\n  const {\n    0: dragStartIndex,\n    1: changeDragStartIndex\n  } = useState(0);\n  /*   const state = {\r\n      dragging: false,\r\n      imageIndex: 0,\r\n      dragStartIndex: 0\r\n    }; */\n\n  const handleMouseMove = e => {\n    if (this.state.dragging) {\n      updateImageIndex(e.screenX);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\n    document.addEventListener(\"mouseup\", handleMouseUp, false);\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove, false);\n      document.removeEventListener(\"mouseup\", handleMouseUp, false);\n    };\n  }, []);\n\n  const handleMouseDown = e => {\n    e.persist();\n    this.setState(state => ({\n      dragging: true,\n      dragStart: e.screenX,\n      dragStartIndex: state.imageIndex\n    }));\n  };\n\n  const handleMouseUp = () => {\n    this.setState({\n      dragging: false\n    });\n  };\n\n  const updateImageIndex = currentPosition => {\n    let numImages = this.props.numImages;\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages);\n    const {\n      dragStart,\n      imageIndex,\n      dragStartIndex\n    } = this.state; // pixels moved\n\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\n    let index = Math.floor(dx) % numImages;\n\n    if (index < 0) {\n      index = numImages + index - 1;\n    }\n\n    index = (index + dragStartIndex) % numImages; // console.log(index, dragStartIndex, numImages)\n\n    if (index !== imageIndex) {\n      //this.setState({ imageIndex: index });\n      changeImageIndex(index);\n    }\n  };\n\n  const preventDragHandler = e => {\n    e.preventDefault();\n  };\n\n  const renderImage = () => {\n    return __jsx(\"div\", {\n      className: \"react360\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      className: \"react-360-img\",\n      alt: \"\",\n      src: require(`./${dir}/${imageIndex}.jpg`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"react-360-img\",\n    onMouseDown: handleMouseDown,\n    onDragStart: preventDragHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, renderImage());\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Jose Castillo/Desktop/template/orbital-react/pages/components/View360.tsx"],"names":["React","useState","useEffect","pixelsPerDegree","App","props","dir","numImages","imageIndex","changeImageIndex","dragging","changeDragging","dragStartIndex","changeDragStartIndex","handleMouseMove","e","state","updateImageIndex","screenX","document","addEventListener","handleMouseUp","removeEventListener","handleMouseDown","persist","setState","dragStart","currentPosition","pixelsPerImage","dx","index","Math","floor","preventDragHandler","preventDefault","renderImage","require"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from \"react\";\r\n//import \"./React360.css\";\r\n\r\n// You can play with this to adjust the sensitivity\r\n// higher values make mouse less sensitive\r\nconst pixelsPerDegree = 3;\r\n\r\ninterface props {\r\n  dir: string\r\n  numImages?: number\r\n}\r\n\r\n\r\nconst App =(props: props)=> {\r\nconst {dir, numImages} = props;\r\n\r\nconst [imageIndex, changeImageIndex] = useState(0);\r\nconst [dragging, changeDragging] = useState(false);\r\nconst [dragStartIndex, changeDragStartIndex] = useState(0);\r\n\r\n\r\n/*   const state = {\r\n    dragging: false,\r\n    imageIndex: 0,\r\n    dragStartIndex: 0\r\n  }; */\r\n\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (this.state.dragging) {\r\n      updateImageIndex(e.screenX);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n\r\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\r\n    document.addEventListener(\"mouseup\", handleMouseUp, false);\r\n\r\n    return () => {\r\n    document.removeEventListener(\"mousemove\", handleMouseMove, false);\r\n    document.removeEventListener(\"mouseup\", handleMouseUp, false);\r\n    }\r\n  }, []); \r\n\r\n  const handleMouseDown = (e) => {\r\n    e.persist();\r\n    this.setState(state => ({\r\n      dragging: true,\r\n      dragStart: e.screenX,\r\n      dragStartIndex: state.imageIndex\r\n    }));\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    this.setState({ dragging: false });\r\n  };\r\n\r\n  const updateImageIndex = (currentPosition) => {\r\n    let numImages = this.props.numImages;\r\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages);\r\n    const { dragStart, imageIndex, dragStartIndex } = this.state;\r\n    // pixels moved\r\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\r\n    let index = Math.floor(dx) % numImages;\r\n\r\n    if (index < 0) {\r\n      index = numImages + index - 1;\r\n    }\r\n    index = (index + dragStartIndex) % numImages;\r\n    // console.log(index, dragStartIndex, numImages)\r\n    if (index !== imageIndex) {\r\n      //this.setState({ imageIndex: index });\r\n      changeImageIndex(index)\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const preventDragHandler = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const renderImage = () => {\r\n    \r\n\r\n    return (\r\n      <div className=\"react360\">\r\n        <img\r\n          className=\"react-360-img\"\r\n          alt=\"\"\r\n          src={require(`./${dir}/${imageIndex}.jpg`)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"react-360-img\"\r\n        onMouseDown={handleMouseDown}\r\n        onDragStart={preventDragHandler}\r\n      >\r\n        {renderImage()}\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}