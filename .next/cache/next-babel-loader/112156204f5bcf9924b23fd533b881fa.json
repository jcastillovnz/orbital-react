{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Castillo\\\\Desktop\\\\template\\\\orbital-react\\\\pages\\\\components\\\\View360.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\"; //import \"./React360.css\";\n// You can play with this to adjust the sensitivity\n// higher values make mouse less sensitive\n\nconst pixelsPerDegree = 3;\n\nconst App = props => {\n  const defaultProps = {\n    dir: \"awair-360\",\n    numImages: 55\n  };\n  const state = {\n    dragging: false,\n    imageIndex: 0,\n    dragStartIndex: 0\n  };\n\n  componentDidMount = () => {\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\n    document.addEventListener(\"mouseup\", handleMouseUp, false);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener(\"mousemove\", handleMouseMove, false);\n    document.removeEventListener(\"mouseup\", handleMouseUp, false);\n  };\n\n  const handleMouseDown = e => {\n    e.persist();\n    this.setState(state => ({\n      dragging: true,\n      dragStart: e.screenX,\n      dragStartIndex: state.imageIndex\n    }));\n  };\n\n  const handleMouseUp = () => {\n    this.setState({\n      dragging: false\n    });\n  };\n\n  const updateImageIndex = currentPosition => {\n    let numImages = this.props.numImages;\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages);\n    const {\n      dragStart,\n      imageIndex,\n      dragStartIndex\n    } = this.state; // pixels moved\n\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\n    let index = Math.floor(dx) % numImages;\n\n    if (index < 0) {\n      index = numImages + index - 1;\n    }\n\n    index = (index + dragStartIndex) % numImages; // console.log(index, dragStartIndex, numImages)\n\n    if (index !== imageIndex) {\n      this.setState({\n        imageIndex: index\n      });\n    }\n  };\n\n  const handleMouseMove = e => {\n    if (this.state.dragging) {\n      updateImageIndex(e.screenX);\n    }\n  };\n\n  const preventDragHandler = e => {\n    e.preventDefault();\n  };\n\n  const renderImage = () => {\n    const {\n      imageIndex\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"react360\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      className: \"react-360-img\",\n      alt: \"\",\n      src: require(`./${this.props.dir}/${imageIndex}.jpg`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"react-360-img\",\n    onMouseDown: this.handleMouseDown,\n    onDragStart: this.preventDragHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, this.renderImage());\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Jose Castillo/Desktop/template/orbital-react/pages/components/View360.tsx"],"names":["React","pixelsPerDegree","App","props","defaultProps","dir","numImages","state","dragging","imageIndex","dragStartIndex","componentDidMount","document","addEventListener","handleMouseMove","handleMouseUp","componentWillUnmount","removeEventListener","handleMouseDown","e","persist","setState","dragStart","screenX","updateImageIndex","currentPosition","pixelsPerImage","dx","index","Math","floor","preventDragHandler","preventDefault","renderImage","require"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n//import \"./React360.css\";\r\n\r\n// You can play with this to adjust the sensitivity\r\n// higher values make mouse less sensitive\r\nconst pixelsPerDegree = 3;\r\n\r\nconst App =(props)=> {\r\nconst  defaultProps = { dir: \"awair-360\", numImages: 55 };\r\n\r\n  const state = {\r\n    dragging: false,\r\n    imageIndex: 0,\r\n    dragStartIndex: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    document.addEventListener(\"mousemove\", handleMouseMove, false);\r\n    document.addEventListener(\"mouseup\", handleMouseUp, false);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    document.removeEventListener(\"mousemove\", handleMouseMove, false);\r\n    document.removeEventListener(\"mouseup\", handleMouseUp, false);\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    e.persist();\r\n    this.setState(state => ({\r\n      dragging: true,\r\n      dragStart: e.screenX,\r\n      dragStartIndex: state.imageIndex\r\n    }));\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    this.setState({ dragging: false });\r\n  };\r\n\r\n  const updateImageIndex = (currentPosition) => {\r\n    let numImages = this.props.numImages;\r\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages);\r\n    const { dragStart, imageIndex, dragStartIndex } = this.state;\r\n    // pixels moved\r\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\r\n    let index = Math.floor(dx) % numImages;\r\n\r\n    if (index < 0) {\r\n      index = numImages + index - 1;\r\n    }\r\n    index = (index + dragStartIndex) % numImages;\r\n    // console.log(index, dragStartIndex, numImages)\r\n    if (index !== imageIndex) {\r\n      this.setState({ imageIndex: index });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (this.state.dragging) {\r\n      updateImageIndex(e.screenX);\r\n    }\r\n  };\r\n\r\n  const preventDragHandler = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const renderImage = () => {\r\n    const { imageIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"react360\">\r\n        <img\r\n          className=\"react-360-img\"\r\n          alt=\"\"\r\n          src={require(`./${this.props.dir}/${imageIndex}.jpg`)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n    return (\r\n      <div\r\n        className=\"react-360-img\"\r\n        onMouseDown={this.handleMouseDown}\r\n        onDragStart={this.preventDragHandler}\r\n      >\r\n        {this.renderImage()}\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}